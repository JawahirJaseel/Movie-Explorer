{"ast":null,"code":"// src/theme/ThemeContext.js\nimport React,{createContext,useContext,useMemo,useState}from\"react\";import{ThemeProvider,createTheme}from\"@mui/material/styles\";import CssBaseline from\"@mui/material/CssBaseline\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ColorModeContext=/*#__PURE__*/createContext();export const useColorMode=()=>useContext(ColorModeContext);export const CustomThemeProvider=_ref=>{let{children}=_ref;const[mode,setMode]=useState(\"light\");const toggleColorMode=()=>{setMode(prevMode=>prevMode===\"light\"?\"dark\":\"light\");};const theme=useMemo(()=>createTheme({palette:{mode}}),[mode]);return/*#__PURE__*/_jsx(ColorModeContext.Provider,{value:{toggleColorMode,mode},children:/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),children]})});};","map":{"version":3,"names":["React","createContext","useContext","useMemo","useState","ThemeProvider","createTheme","CssBaseline","jsx","_jsx","jsxs","_jsxs","ColorModeContext","useColorMode","CustomThemeProvider","_ref","children","mode","setMode","toggleColorMode","prevMode","theme","palette","Provider","value"],"sources":["D:/loonslab/movie-explorer/src/theme/ThemeContext.js"],"sourcesContent":["// src/theme/ThemeContext.js\r\nimport React, { createContext, useContext, useMemo, useState } from \"react\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\n\r\nconst ColorModeContext = createContext();\r\n\r\nexport const useColorMode = () => useContext(ColorModeContext);\r\n\r\nexport const CustomThemeProvider = ({ children }) => {\r\n  const [mode, setMode] = useState(\"light\");\r\n\r\n  const toggleColorMode = () => {\r\n    setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  const theme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode,\r\n        },\r\n      }),\r\n    [mode]\r\n  );\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={{ toggleColorMode, mode }}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CAC3E,OAASC,aAAa,CAAEC,WAAW,KAAQ,sBAAsB,CACjE,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,KAAM,CAAAC,gBAAgB,cAAGX,aAAa,CAAC,CAAC,CAExC,MAAO,MAAM,CAAAY,YAAY,CAAGA,CAAA,GAAMX,UAAU,CAACU,gBAAgB,CAAC,CAE9D,MAAO,MAAM,CAAAE,mBAAmB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC9C,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,OAAO,CAAC,CAEzC,KAAM,CAAAe,eAAe,CAAGA,CAAA,GAAM,CAC5BD,OAAO,CAAEE,QAAQ,EAAMA,QAAQ,GAAK,OAAO,CAAG,MAAM,CAAG,OAAQ,CAAC,CAClE,CAAC,CAED,KAAM,CAAAC,KAAK,CAAGlB,OAAO,CACnB,IACEG,WAAW,CAAC,CACVgB,OAAO,CAAE,CACPL,IACF,CACF,CAAC,CAAC,CACJ,CAACA,IAAI,CACP,CAAC,CAED,mBACER,IAAA,CAACG,gBAAgB,CAACW,QAAQ,EAACC,KAAK,CAAE,CAAEL,eAAe,CAAEF,IAAK,CAAE,CAAAD,QAAA,cAC1DL,KAAA,CAACN,aAAa,EAACgB,KAAK,CAAEA,KAAM,CAAAL,QAAA,eAC1BP,IAAA,CAACF,WAAW,GAAE,CAAC,CACdS,QAAQ,EACI,CAAC,CACS,CAAC,CAEhC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}