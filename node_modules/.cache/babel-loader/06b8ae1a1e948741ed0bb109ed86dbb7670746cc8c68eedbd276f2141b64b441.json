{"ast":null,"code":"var _jsxFileName = \"D:\\\\loonslab\\\\movie-explorer\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Button, Typography } from \"@mui/material\";\nimport MovieCard from \"../components/MovieCard\";\nimport Filters from \"../components/Filters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [page, setPage] = useState(1);\n\n  // Filter states\n  const [selectedGenre, setGenre] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [rating, setRating] = useState(0);\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n  const fetchGenres = async () => {\n    const res = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`);\n    setGenres(res.data.genres);\n  };\n  const fetchMovies = async () => {\n    const res = await axios.get(`https://api.themoviedb.org/3/discover/movie`, {\n      params: {\n        api_key: API_KEY,\n        page,\n        with_genres: selectedGenre || undefined,\n        primary_release_year: year || undefined,\n        \"vote_average.gte\": rating\n      }\n    });\n    setMovies(prev => page === 1 ? res.data.results : [...prev, ...res.data.results]);\n  };\n  useEffect(() => {\n    fetchGenres();\n  }, []);\n  useEffect(() => {\n    setPage(1); // Reset to page 1 when filters change\n  }, [selectedGenre, year, rating]);\n  useEffect(() => {\n    fetchMovies();\n  }, [page, selectedGenre, year, rating]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      mb: 2,\n      children: \"Explore Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      genres: genres,\n      selectedGenre: selectedGenre,\n      setGenre: setGenre,\n      year: year,\n      setYear: setYear,\n      rating: rating,\n      setRating: setRating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: () => setPage(prev => prev + 1),\n      sx: {\n        mt: 3\n      },\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"JVlBFJlG6Cp2qqo6dbMQ4RFUrYI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","Grid","Button","Typography","MovieCard","Filters","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","genres","setGenres","page","setPage","selectedGenre","setGenre","year","setYear","rating","setRating","API_KEY","process","env","REACT_APP_TMDB_API_KEY","fetchGenres","res","get","data","fetchMovies","params","api_key","with_genres","undefined","primary_release_year","prev","results","style","padding","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","movie","item","xs","sm","md","lg","id","onClick","sx","mt","_c","$RefreshReg$"],"sources":["D:/loonslab/movie-explorer/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Grid, Button, Typography } from \"@mui/material\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport Filters from \"../components/Filters\";\r\n\r\nconst Home = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  // Filter states\r\n  const [selectedGenre, setGenre] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [rating, setRating] = useState(0);\r\n\r\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\n  const fetchGenres = async () => {\r\n    const res = await axios.get(\r\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\r\n    );\r\n    setGenres(res.data.genres);\r\n  };\r\n\r\n  const fetchMovies = async () => {\r\n    const res = await axios.get(`https://api.themoviedb.org/3/discover/movie`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        page,\r\n        with_genres: selectedGenre || undefined,\r\n        primary_release_year: year || undefined,\r\n        \"vote_average.gte\": rating,\r\n      },\r\n    });\r\n    setMovies((prev) =>\r\n      page === 1 ? res.data.results : [...prev, ...res.data.results]\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPage(1); // Reset to page 1 when filters change\r\n  }, [selectedGenre, year, rating]);\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [page, selectedGenre, year, rating]);\r\n\r\n  return (\r\n    <div style={{ padding: \"1rem\" }}>\r\n      <Typography variant=\"h4\" mb={2}>\r\n        Explore Movies\r\n      </Typography>\r\n      <Filters\r\n        genres={genres}\r\n        selectedGenre={selectedGenre}\r\n        setGenre={setGenre}\r\n        year={year}\r\n        setYear={setYear}\r\n        rating={rating}\r\n        setRating={setRating}\r\n      />\r\n      <Grid container spacing={2}>\r\n        {movies.map((movie) => (\r\n          <Grid item key={movie.id} xs={12} sm={6} md={4} lg={3}>\r\n            <MovieCard movie={movie} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={() => setPage((prev) => prev + 1)}\r\n        sx={{ mt: 3 }}\r\n      >\r\n        Load More\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}