{"ast":null,"code":"// src/components/ThemeToggle.jsx\nimport React from\"react\";import IconButton from\"@mui/material/IconButton\";import{useColorMode}from\"../theme/ThemeContext\";// Adjust path if needed\nimport LightModeIcon from\"@mui/icons-material/LightMode\";import DarkModeIcon from\"@mui/icons-material/DarkMode\";import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeToggle=()=>{const{toggleColorMode,mode}=useColorMode();return/*#__PURE__*/_jsx(IconButton,{onClick:toggleColorMode,color:\"inherit\",children:mode===\"dark\"?/*#__PURE__*/_jsx(LightModeIcon,{}):/*#__PURE__*/_jsx(DarkModeIcon,{})});};export default ThemeToggle;","map":{"version":3,"names":["React","IconButton","useColorMode","LightModeIcon","DarkModeIcon","jsx","_jsx","ThemeToggle","toggleColorMode","mode","onClick","color","children"],"sources":["D:/loonslab/movie-explorer/src/components/ThemeToggle.js"],"sourcesContent":["// src/components/ThemeToggle.jsx\r\nimport React from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useColorMode } from \"../theme/ThemeContext\"; // Adjust path if needed\r\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\r\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\r\n\r\nconst ThemeToggle = () => {\r\n  const { toggleColorMode, mode } = useColorMode();\r\n\r\n  return (\r\n    <IconButton onClick={toggleColorMode} color=\"inherit\">\r\n      {mode === \"dark\" ? <LightModeIcon /> : <DarkModeIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,OAASC,YAAY,KAAQ,uBAAuB,CAAE;AACtD,MAAO,CAAAC,aAAa,KAAM,+BAA+B,CACzD,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExD,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAEC,eAAe,CAAEC,IAAK,CAAC,CAAGP,YAAY,CAAC,CAAC,CAEhD,mBACEI,IAAA,CAACL,UAAU,EAACS,OAAO,CAAEF,eAAgB,CAACG,KAAK,CAAC,SAAS,CAAAC,QAAA,CAClDH,IAAI,GAAK,MAAM,cAAGH,IAAA,CAACH,aAAa,GAAE,CAAC,cAAGG,IAAA,CAACF,YAAY,GAAE,CAAC,CAC7C,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}