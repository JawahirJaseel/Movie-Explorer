{"ast":null,"code":"var _jsxFileName = \"D:\\\\loonslab\\\\movie-explorer\\\\src\\\\pages\\\\MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Typography, Grid, CircularProgress, Button, Chip } from \"@mui/material\";\nimport { getMovieDetails, getMovieVideos } from \"../api/tmdb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [trailerUrl, setTrailerUrl] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchDetails = async () => {\n      setLoading(true);\n      try {\n        const res = await getMovieDetails(id);\n        setMovie(res.data);\n        const videoRes = await getMovieVideos(id);\n        const trailer = videoRes.data.results.find(v => v.type === \"Trailer\" && v.site === \"YouTube\");\n        if (trailer) setTrailerUrl(`https://www.youtube.com/watch?v=${trailer.key}`);\n      } catch (err) {\n        console.error(\"Failed to load movie details\", err);\n      }\n      setLoading(false);\n    };\n    fetchDetails();\n  }, [id]);\n  if (loading || !movie) return /*#__PURE__*/_jsxDEV(CircularProgress, {\n    sx: {\n      mt: 5\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n          alt: movie.title,\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          mb: 2,\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Genres:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), movie.genres.map(g => /*#__PURE__*/_jsxDEV(Chip, {\n          label: g.name,\n          sx: {\n            mr: 1,\n            mb: 1\n          }\n        }, g.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          mt: 2,\n          children: [\"Release Date: \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: [\"Rating: \", movie.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), trailerUrl && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          href: trailerUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Watch Trailer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"vrmP9Zh/SwuagxPudH+doMpIHK0=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Container","Typography","Grid","CircularProgress","Button","Chip","getMovieDetails","getMovieVideos","jsxDEV","_jsxDEV","MovieDetails","_s","id","movie","setMovie","trailerUrl","setTrailerUrl","loading","setLoading","fetchDetails","res","data","videoRes","trailer","results","find","v","type","site","key","err","console","error","sx","mt","fileName","_jsxFileName","lineNumber","columnNumber","children","variant","gutterBottom","title","container","spacing","item","xs","md","src","poster_path","alt","width","mb","overview","genres","map","g","label","name","mr","release_date","vote_average","href","target","rel","_c","$RefreshReg$"],"sources":["D:/loonslab/movie-explorer/src/pages/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  CircularProgress,\r\n  Button,\r\n  Chip,\r\n} from \"@mui/material\";\r\nimport { getMovieDetails, getMovieVideos } from \"../api/tmdb\";\r\n\r\nconst MovieDetails = () => {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [trailerUrl, setTrailerUrl] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDetails = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await getMovieDetails(id);\r\n        setMovie(res.data);\r\n\r\n        const videoRes = await getMovieVideos(id);\r\n        const trailer = videoRes.data.results.find(\r\n          (v) => v.type === \"Trailer\" && v.site === \"YouTube\"\r\n        );\r\n        if (trailer)\r\n          setTrailerUrl(`https://www.youtube.com/watch?v=${trailer.key}`);\r\n      } catch (err) {\r\n        console.error(\"Failed to load movie details\", err);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchDetails();\r\n  }, [id]);\r\n\r\n  if (loading || !movie) return <CircularProgress sx={{ mt: 5 }} />;\r\n\r\n  return (\r\n    <Container sx={{ mt: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {movie.title}\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4}>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n            alt={movie.title}\r\n            width=\"100%\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Typography variant=\"body1\" mb={2}>\r\n            {movie.overview}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Genres:\r\n          </Typography>\r\n          {movie.genres.map((g) => (\r\n            <Chip label={g.name} key={g.id} sx={{ mr: 1, mb: 1 }} />\r\n          ))}\r\n          <Typography variant=\"subtitle1\" mt={2}>\r\n            Release Date: {movie.release_date}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\">\r\n            Rating: {movie.vote_average}\r\n          </Typography>\r\n\r\n          {trailerUrl && (\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ mt: 2 }}\r\n              href={trailerUrl}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Watch Trailer\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}